stages:
    - build
    - deploy

variables:
    REGISTRY_URL: "dockerhub.cloud-interactive.com"

develop_build:
    stage: build
    variables:
        ENV: "dev"
        BUILD_IMAGE: "gradle:6.6-jdk11"
        RUNTIME_IMAGE: "openjdk:11-buster"
    script:
        - echo '=== develop build ==='
        - docker build --build-arg BUILD_IMAGE=$BUILD_IMAGE --build-arg RUNTIME_IMAGE=$RUNTIME_IMAGE --build-arg ENV=$ENV -t $REGISTRY_URL/cathay-healthcare/$ENV/bff .
        - echo '=== login to registry ==='
        - docker login $REGISTRY_URL -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
        - echo '=== push image ==='
        - docker push $REGISTRY_URL/cathay-healthcare/$ENV/bff
        - echo '=== logout from registry ==='
        - docker logout $REGISTRY_URL
        - echo '=== clean image ==='
        - docker rmi $REGISTRY_URL/cathay-healthcare/$ENV/bff
    only:
        - develop
    tags:
        - local

release_build:
    stage: build
    variables:
        ENV: "sit"
        BUILD_IMAGE: "gradle:6.6-jdk11"
        RUNTIME_IMAGE: "openjdk:11-jdk"
    before_script:
        - apk update
        - apk add --no-cache aws-cli
    script:
        - echo '=== release build ==='
        - docker build --build-arg BUILD_IMAGE=$BUILD_IMAGE --build-arg RUNTIME_IMAGE=$RUNTIME_IMAGE --build-arg ENV=$ENV -t $ECR_URL/cathay-healthcare/$ENV/bff .
        - echo '=== login to registry ==='
        - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin $ECR_URL
        - echo '=== push image ==='
        - docker push $ECR_URL/cathay-healthcare/$ENV/bff
        - echo '=== logout from registry ==='
        - docker logout $ECR_URL
        - echo '=== clean image ==='
        - docker rmi $ECR_URL/cathay-healthcare/$ENV/bff
    only:
        - /^(RC|Verify)_v.*$/
    except:
        - branches
    tags:
        - aws

develop_deploy:
    stage: deploy
    variables:
        ENV: "dev"
        CONTAINER_NAME: "cathay-healthcare-$ENV-bff"
    before_script:
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - echo "$LOCAL_SSH_KEY" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - echo "$LOCAL_SSH_KNOWN_HOST" >> ~/.ssh/known_hosts
        - chmod 644 ~/.ssh/known_hosts
    script:
        - echo '=== develop deploy ==='
        - echo '=== remove old container ==='
        - ssh $LOCAL_SERVER_USER@$LOCAL_SERVER "docker rm -f $CONTAINER_NAME; or true"
        - echo '=== remove old image ==='
        - ssh $LOCAL_SERVER_USER@$LOCAL_SERVER "docker rmi $REGISTRY_URL/cathay-healthcare/$ENV/bff; or true"
        - echo '=== login to registry, pull image and logout ==='
        - ssh $LOCAL_SERVER_USER@$LOCAL_SERVER "docker login $REGISTRY_URL -u $DOCKER_REGISTRY_USER -p '$DOCKER_REGISTRY_PASSWORD'; and docker pull $REGISTRY_URL/cathay-healthcare/$ENV/bff; and docker logout $REGISTRY_URL"
        - echo '=== run container ==='
        - ssh $LOCAL_SERVER_USER@$LOCAL_SERVER "docker run -d -p 14888:17788 --name $CONTAINER_NAME $REGISTRY_URL/cathay-healthcare/$ENV/bff"
    only:
        - develop
    tags:
        - local

release_deploy:
    stage: deploy
    variables:
        CLUSTER_NAME: "cathay-healthcare-sit"
        SERVICE_NAME: "bff"
        TIME_TO_WAIT_NEW_SERVICE: 60
    before_script:
        - apk update
        - apk add --no-cache aws-cli
    script:
        - aws ecs update-service --region ap-northeast-1 --service $SERVICE_NAME --cluster $CLUSTER_NAME --force-new-deployment
        - sleep $TIME_TO_WAIT_NEW_SERVICE
    only:
        - /^(RC|Verify)_v.*$/
    except:
        - branches
    tags:
        - aws

master_push_code:
    stage: deploy
    before_script:
        - mkdir -p ~/.ssh
        - echo "$CATHAY_HCM_PUBLIC_KEY" | tr -d '\r' > ~/.ssh/id_rsa.pub
        - chmod 400 ~/.ssh/id_rsa.pub
        - echo "$CATHAY_HCM_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
        - chmod 400 ~/.ssh/id_rsa
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
        - git clone $CATHAY_GIT_URL
        - git config --global user.name "$COMMITER_NAME"
        - git config --global user.email "$COMMITTER_EMAIL"
        - apk update
        - apk add --no-cache rsync
    script:
        - cd $CATHAY_GIT_FOLDER
        - git pull
        - cd ..
        - rsync -a --delete . ./$CATHAY_GIT_FOLDER --exclude .git --exclude $CATHAY_GIT_FOLDER --exclude $CATHAY_GIT_FOLDER/.git
        - cd $CATHAY_GIT_FOLDER
        - git add .
        - git commit -m "cloud-interactive version:$CI_COMMIT_TAG"
        - git push
    only:
        - /^v.*$/
    except:
        - branches
    tags:
        - local

